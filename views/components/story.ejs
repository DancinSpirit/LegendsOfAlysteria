<div id = "story">
    <div class="external" id="settings-button">
        <i class="fas fa-cog"></i>
    </div>
    <section id="top-section">
        <section id="tabs">
            <button class="tab" id="story-tab">Story</button>
            <button class="tab unselected invisible" id="contents-tab">Table of Contents</button> 
            <button class="tab unselected invisible <%if(!user.gamemaster){%>invisible-2<%}%>" id="gamemaster-tab">Gamemaster View</button> 
        </section>
    </section>
    <section id="main-story-section">
        <section id="left-arrow">
            <section class="arrow-box invisible" id="left-arrow-box"><i class="fas fa-chevron-left"></i></section>
        </section>
        <section>
            <section class="textbox" id="player-box">
                <section class="bottom" id="player-bottom">
                    <div id="sub-story-container-container">
                        <div id="sub-story-container">
                            <section id="sub-story">
                            </section>
                        </div>
                    </div>  
                </section>
            </section>
        </section>  
        <section id="right-arrow">
            <section class="arrow-box invisible" id="right-arrow-box"><i class="fas fa-chevron-right"></i></section>
        </section>
    </section>
    <section id="top-arrow">
        <section class="arrow-box invisible" id="top-arrow-box"><i class="fas fa-chevron-up"></i></section>
    </section>
    <section id="cutaway-image-collection" class="invisible external">

    </section>



    <section id="cutaway-image-container">
        <section id="cutaway-image">

        </section>
        <section id="cutaway-subtitle">
        </section>
    </section>
    <section id="choice-container">
        <section id="choice">

        </section>
    </section>
</div>
<script>
story = JSON.parse(`<%-JSON.stringify(story)%>`); 
$("body").on("keydown", function (e) {
    if (e.keyCode == 17) {
        if(enterButton&&keyButtons)
            $("#player-box").click()
    }
})

$("body").on("keypress", function (e) {
    if (e.keyCode == 13 || e.keyCode == 32) {
        if(ctrlButton&&keyButtons)
            $("#player-box").click();
    }
})

$("body").on("keydown", function (e){
    if(e.keyCode == 37){
        if(keyButtons)
        $("#left-arrow-box").click();
    }
    if(e.keyCode == 39){
        if(keyButtons)
        $("#right-arrow-box").click();
    }
})
buttons.settingsClick = function(){
        $("#settings-button").on("click", async function(){
            setCookieStates();
            states = ["main","settings"];
            databaseObjects = [false,false];
            customdata = [false,false];
            window.history.pushState({states:states,databaseObjects: databaseObjects,customData:customData}, "Settings", "/main/settings");
            await loadStates();
        })
    } 
buttons.contentsTab = function(){
    $("#contents-tab").on("click", async function(){
        setCookieStates();
        states = ["story","contents","content-year"];
        databaseObjects = [databaseObjects[0],false,databaseObjects[0]];
        customData = [customData[0],customData[1],customData[1]];
        window.history.pushState({states:states,databaseObjects: databaseObjects,customData:customData}, "Table of Contents", `/story/contents/content-year`);
        await loadState(1, "down");
        await loadState(2, "right");
        if($("#left-arrow-box").hasClass("invisible")){
            $("#left-arrow-box").removeClass("invisible");
        }
        $("#contents-tab").off("click");
        $("#story-tab").off("click");
        buttons.storyTab();
    })
}
buttons.storyTab = function(){
    $("#story-tab").on("click", async function(){
        continueEvent = true;
        $("#left-arrow-box").off("click");
        $("#right-arrow-box").off("click");
        onContents = false;
        if(states[1]=="contents"){
            getCookieStates();
        }else{
            if(states[1]=="gamemaster-event"){
                states[1]=`event`;
            }
        }
        window.history.pushState({states:states,databaseObjects: databaseObjects,customData:customData}, "Story", `/story/${states[1]}`);
        await loadState(1, "down");
        $("#story-tab").off("click");
        $("#contents-tab").off("click");
        $("#gamemaster-tab").off("click");
        buttons.contentsTab();
        buttons.gamemasterTab();
        $("body").on("keydown", function (e) {
            if (e.keyCode == 17) {
                if(enterButton&&keyButtons)
                    $("#player-box").click()
            }
        })
        
        $("body").on("keydown", function (e){
            if(e.keyCode == 37){
                if(keyButtons)
                $("#left-arrow-box").click();
            }
            if(e.keyCode == 39){
                if(keyButtons)
                $("#right-arrow-box").click();
            }
        })
    })
}

buttons.completionCheckbox = function(checkbox){
    checkbox.off("change");
    checkbox.change(function(){
        let progress = {};
        if($("#finished").is(":checked")){
            progress.finished = true;
        }else{
            progress.finished = false;
        }
        if($("#edited").is(":checked")){
            progress.edited = true;
        }else{
            progress.edited = false;
        }
        if($("#complete").is(":checked")){
            progress.complete = true;
        }else{
            progress.complete = false;
        }
        updateDatabaseObject("Event",eventId,{progress:progress});
    })
}

buttons.gamemasterPageSetup = function(){
    buttons.completionCheckbox($("#finished"));
    buttons.completionCheckbox($("#edited"));
    buttons.completionCheckbox($("#complete"));
    buttons.gamemasterInput = function(x){
        $("#event-type").on("input",function(){
            updateDatabaseObject("Event",eventId,{type: $("#event-type").text()})
        })
        $("#event-title").on("input",function(){
            updateDatabaseObject("Event",eventId,{title: $("#event-title").text()})
        })
        $("#event-subtitle").on("input",function(){
            updateDatabaseObject("Event",eventId,{subtitle: $("#event-subtitle").text()})
        })
        $("#event-writtenBy").on("input",function(){
            updateDatabaseObject("Event",eventId,{writtenBy: $("#event-writtenBy").text()})
        })
        $("#event-background").on("input",function(){
            updateDatabaseObject("Event",eventId,{background: $("#event-background").text()})
        })
        $("#event-starting-music").on("input",function(){
            updateDatabaseObject("Event",eventId,{startingMusic: $("#event-starting-music").text()})
        })
        $("#gamemaster-text-"+x).on("input",function(){
            text[x] = $("#gamemaster-text-"+x).text();
            let amountOfQuotes = 0;
            for(let y=0; y<text[x].length; y++){
                if(text[x][y] == "\"" || text[x][y] =="“" || text[x][y] =="”"){
                    amountOfQuotes ++;
                    if(amountOfQuotes%2 == 0){
                        text[x] = text[x].replaceAt(y,"”")
                    }else{
                        text[x] = text[x].replaceAt(y,"“")
                    }
                }
            }
            if(text[x] == ""){
                text.splice(x,1);
                $("#gamemaster-text-"+x).remove();
                for(let y=x+1; y<$(".gamemaster-text").length; y++){
                    $("#gamemaster-text-"+y).attr("id","gamemaster-text-"+(y-1));
                    $("#gamemaster-text-"+(y-1)).off("input");
                    $("#gamemaster-text-"+(y-1)).off("keydown");
                    $("#gamemaster-text-"+(y-1)).off("keyup");
                    buttons.gamemasterInput((y-1));
                }
            }
            updateDatabaseObject("Event",eventId,{text:text});
        })
        $("#gamemaster-text-"+x).on("keydown",function(e){
            if (e.keyCode == 13) {
                e.preventDefault();
                if(!enterKeyPressed){
                    enterKeyPressed = true;
                    text.splice(x+1,0,"");
                    for(let y=$(".gamemaster-text").length-1; y>x; y--){
                        $("#gamemaster-text-"+y).attr("id","gamemaster-text-"+(y+1));
                        $("#gamemaster-text-"+(y+1)).off("input");
                        $("#gamemaster-text-"+(y+1)).off("keydown");
                        $("#gamemaster-text-"+(y+1)).off("keyup");
                        buttons.gamemasterInput((y+1));
                    }
                    $("#gamemaster-text-"+x).after(`<p id="gamemaster-text-${x+1}" class="gamemaster-text boxtext" contenteditable="true">${text[x+1]}</p>`)
                    buttons.gamemasterInput(x+1);
                    $("#gamemaster-text-"+(x+1)).focus();
                }
            }
            if(e.keyCode == 38){
                if(x>0){
                    $("#gamemaster-text-"+(x-1)).focus();
                }else{
                    text.splice(0,0,"");
                    for(let y=$(".gamemaster-text").length-1; y>-1; y--){
                        $("#gamemaster-text-"+y).attr("id","gamemaster-text-"+(y+1));
                        $("#gamemaster-text-"+(y+1)).off("input");
                        $("#gamemaster-text-"+(y+1)).off("keydown");
                        $("#gamemaster-text-"+(y+1)).off("keyup");
                        buttons.gamemasterInput((y+1));
                    }
                    $("#gamemaster-text-1").before(`<p id="gamemaster-text-0" class="gamemaster-text boxtext" contenteditable="true">${text[0]}</p>`)
                    buttons.gamemasterInput(0);
                    $("#gamemaster-text-0").focus();
                }
            }
            if(e.keyCode == 40){
                if(x<text.length){
                    $("#gamemaster-text-"+(x+1)).focus();
                }
            }
        })
        $("#gamemaster-text-"+x).on("keyup",function(e){
            if (e.keyCode == 13) {
                enterKeyPressed = false;
            }
        })
    }
    if(states[1] == "gamemaster-event"){
        for(let x=0; x<text.length; x++){
            $("#gamemaster-text-box").append(`<p id="gamemaster-text-${x}" class="gamemaster-text boxtext" contenteditable="true">${text[x]}</p>`)
            buttons.gamemasterInput(x);
        }
    }
}

buttons.gamemasterTab = function(){
    $("#gamemaster-tab").on("click", async function(){
        continueEvent = false;
        $("#gamemaster-tab").removeClass("unselected");
        $("#contents-tab").addClass("invisible");
        $("#story-tab").addClass("unselected")
        states[1]=`gamemaster-${states[1]}`;
        await loadState(1, "up");
        buttons.gamemasterPageSetup();
        states[1] = states[1].replace("gamemaster-","");
        $("#gamemaster-tab").off("click");
        $("#story-tab").off("click");
        buttons.storyTab();
    })
}
buttons.settingsClick();
buttons.contentsTab();
buttons.storyTab();
buttons.gamemasterTab();

window.addEventListener('contextmenu', function(e){
    if(!user.gamemaster){
        e.preventDefault();
        if(screen){
            $("#title-box-event").css("visibility","hidden");
            $("#sub-base").css("visibility","hidden");
            $("#settings-button").css("visibility","hidden");
            screen = false;
        }else{
            $("#sub-base").css("visibility","visible");
            $("#title-box-event").css("visibility","visible");
            $("#settings-button").css("visibility","visible");
            screen = true;
        }
    }
}) 

if(isMobile){
    let touchstartX = 0;
    let touchstartY = 0;
    let touchendX = 0;
    let touchendY = 0;

    window.addEventListener('touchstart', function(event) {
        touchstartX = event.changedTouches[0].screenX;
        touchstartY = event.changedTouches[0].screenY;
    }, false);

    window.addEventListener('touchend', function(event) {
        touchendX = event.changedTouches[0].screenX;
        touchendY = event.changedTouches[0].screenY;
        handleGesture();
    }, false); 

    function handleGesture() {
        if (touchendX <= touchstartX) {
            if(touchstartX - touchendX > 50){
                $("#right-arrow-box").click();
            }
        }
        
        if (touchendX >= touchstartX) {
            if(touchstartX - touchendX < -50){
                $("#left-arrow-box").click();
            }
        }
        
        if (touchendY <= touchstartY) {
            //UP
        }
        
        if (touchendY >= touchstartY) {
            //DOWN
        }
        
        if (touchendY === touchstartY) {
            //TAP
        }
    }
}
storyHeight = $("#player-box").height();
</script>
<background>/images/<%=player.background%>.jpg</background>
<animation>up</animation>